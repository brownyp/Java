/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.main;

import Thread.Threadsystem;
import business.city.City;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.Organization;
import business.state.State;
import business.system.EcoSystem;
import business.useraccount.UserAccount;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author yupei
 */
public class MainLoginFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainLoginFrame
     */
    MainJFrame mainJFrame;
    private EcoSystem system;
    private Threadsystem myThread;

    public MainLoginFrame() throws UnknownHostException, ClassNotFoundException {

        initComponents();
        setSize(350, 250);
        setTitle("Client");
//        system = ConfigureABusiness.configure();
        
        try {
            go();
        } catch (IOException ex) {
            Logger.getLogger(MainLoginFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
//        update();
        myThread = new Threadsystem();

        Thread t = new Thread(myThread);
        t.start();
    }
//    
//    public void SendSystem(EcoSystem system) throws IOException, ClassNotFoundException{
//        Socket client = new Socket("127.0.0.1", 4245);
//
//       PrintWriter printWriter = new PrintWriter(client.getOutputStream());
//       printWriter.println("1");
//       printWriter.flush();
//      
//
//       //通过printWriter 来向服务器发送消息
//       ObjectOutputStream out = new ObjectOutputStream(client.getOutputStream());
//       out.writeObject(system);
//       out.flush();
//      
//
//       InputStreamReader inputStreamReader = new InputStreamReader(client.getInputStream());
//       BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
//       bufferedReader = new BufferedReader(inputStreamReader);
//       String request1 = bufferedReader.readLine();
//       System.out.println("Receive system " + request1);
//
//       printWriter.close();
//       out.close();
//       System.out.println("Link started. System sent.");
//   }

    public void setBlank() {
        txtPassword.setText("");
        txtUserName.setText("");
    }
    
    public void go() throws UnknownHostException, IOException, ClassNotFoundException {
        Thread t = Thread.currentThread();
        //向服务器端发送请求，服务器IP地址和服务器监听的端口号  
        Socket client = new Socket("127.0.0.1", 4245);

        //通过printWriter 来向服务器发送消息  
        PrintWriter printWriter = new PrintWriter(client.getOutputStream());
        System.out.println("Link started");

        //发送消息  
        printWriter.println("First link");
        printWriter.flush();

        //InputStreamReader是低层和高层串流之间的桥梁  
        //client.getInputStream()从Socket取得输入串流  
        InputStreamReader streamReader = new InputStreamReader(client.getInputStream());
        ObjectInputStream in = new ObjectInputStream(client.getInputStream());
       
        EcoSystem s1 = (EcoSystem) in.readObject();
        this.system = s1;
        System.out.println(s1.getNetworkDirectory().getNetworkList().size());

        //链接数据串流，建立BufferedReader来读取，将BufferReader链接到InputStreamReder  
        BufferedReader reader = new BufferedReader(streamReader);
        String advice = reader.readLine();

        JOptionPane.showMessageDialog(null, advice);
        reader.close();
        in.close();
//        

    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        btnSignup = new javax.swing.JButton();
        btnForget = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("UserName:");

        jLabel2.setText("Password:");

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnSignup.setText("Sign up");
        btnSignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignupActionPerformed(evt);
            }
        });

        btnForget.setText("Forget Password");
        btnForget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForgetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUserName)
                            .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLogin))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSignup)
                        .addGap(18, 18, 18)
                        .addComponent(btnForget)))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSignup)
                    .addComponent(btnForget))
                .addContainerGap(168, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        //System.out.println("aaa");
        this.system = myThread.getSystem();
        String userName = txtUserName.getText();
        //        // Get Password
        char[] passwordCharArray = txtPassword.getPassword();
        String password = String.valueOf(passwordCharArray);

        //Step1: Check in the system user account directory if you have the user
        UserAccount userAccount = system.getUserAccountDirectory().authenticateUser(userName, password);

        State inState = null;
        Enterprise inEnterprise = null;
        City inCity = null;
        Organization inOrganization = null;

        if (userAccount == null) {
            for (Network network : system.getNetworkDirectory().getNetworkList()) {
                for (State state : network.getStateDirectory().getStateList()) {
                    for (City city : state.getCityDirectory().getCityList()) {
                        for (Enterprise enterprise : city.getEnterpriseDirectory().getEnterpriseList()) {

                            userAccount = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                            if (userAccount == null) {
                                //System.out.println("b");
                                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                                    userAccount = organization.getUserAccountDirectory().authenticateUser(userName, password);
                                    if (userAccount != null) {
                                        //System.out.println("c");
                                        inState = state;
                                        inCity = city;
                                        inEnterprise = enterprise;
                                        inOrganization = organization;

                                        break;
                                    }
                                }
                            } else {
                                //System.out.println("d");
                                inState = state;
                                inCity = city;
                                inEnterprise = enterprise;

                                break;
                            }
                            if (inOrganization != null) {

                                break;
                            }
                        }
                        if (inEnterprise != null) {

                            break;
                        }
                    }
                    if (inCity != null) {
                        break;

                    }
                }
                if (inState != null) {
                    break;
                }
            }
        }
        if (userAccount == null) {
            JOptionPane.showMessageDialog(null, "Invalid Credentails!");
            return;
        } else {
            if (userAccount.getStatus().equals("OK")) {
                MainJFrame m1 = new MainJFrame(userName, password, system, this, myThread);
                m1.setVisible(true);
                setVisible(false);
            } else {
                JOptionPane.showMessageDialog(null, "Account Disabled!");
                return;
            }
        }
        setBlank();
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnSignupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignupActionPerformed
        // TODO add your handling code here:
        this.system = myThread.getSystem();
        RegisterJFrame r1 = new RegisterJFrame(system, this);
        r1.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnSignupActionPerformed

    private void btnForgetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForgetActionPerformed
        // TODO add your handling code here:
        this.system = myThread.getSystem();
        ForgetPassJFrame f1 = new ForgetPassJFrame(system, this);
        f1.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnForgetActionPerformed
    public String getUsername() {
        String a1 = txtUserName.getText();
        return a1;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainLoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainLoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainLoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainLoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        try {
            org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper.launchBeautyEyeLNF();
            UIManager.put("RootPane.setupButtonVisible", false);

        } catch (Exception e) {
            //TODO exception
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainLoginFrame().setVisible(true);
                } catch (UnknownHostException ex) {
                    Logger.getLogger(MainLoginFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MainLoginFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnForget;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnSignup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
